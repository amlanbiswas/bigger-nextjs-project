{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Amlan\\\\Coding\\\\React JS\\\\NextJS\\\\bigger-nextjs-project\\\\pages\\\\[meetupId].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, _objectSpread({}, props.meetupData), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://amlan:amlan@cluster0.sguj2iz.mongodb.net/myDB?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetupIds = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    paths: meetupIds.map(meetupIdData => ({\n      params: {\n        meetupId: meetupIdData._id.toString()\n      }\n    })),\n    fallback: false\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://amlan:amlan@cluster0.sguj2iz.mongodb.net/myDB?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        image: selectedMeetup.image,\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n      }\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Amlan/Coding/React JS/NextJS/bigger-nextjs-project/pages/[meetupId].js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","meetupData","getStaticPaths","client","connect","db","meetupsCollection","collection","meetupIds","find","_id","toArray","close","paths","map","meetupIdData","params","meetupId","toString","fallback","getStaticProps","context","selectedMeetup","findOne","id","image","title","address","description"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,sBACE,QAAC,YAAD,oBAAkBA,KAAK,CAACC,UAAxB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;AAMA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,yFAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,SAAS,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAxB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,KAAK,EAAEL,SAAS,CAACM,GAAV,CAAcC,YAAY,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,YAAY,CAACL,GAAb,CAAiBQ,QAAjB;AAAZ;AAAV,KAAL,CAA1B,CADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CAVM;AAYP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,yFAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAEO;AAAN,GAA1B,CAA7B;AACAd,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVuB,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBQ,QAAnB,EADM;AAEVO,QAAAA,KAAK,EAAEH,cAAc,CAACG,KAFZ;AAGVC,QAAAA,KAAK,EAAEJ,cAAc,CAACI,KAHZ;AAIVC,QAAAA,OAAO,EAAEL,cAAc,CAACK,OAJd;AAKVC,QAAAA,WAAW,EAAEN,cAAc,CAACM;AALlB;AADP;AADF,GAAP;AAWD,CAlBM;AAoBP,eAAe7B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport MeetupDetail from '../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = props => {\r\n  return (\r\n    <MeetupDetail {...props.meetupData} />\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect('mongodb+srv://amlan:amlan@cluster0.sguj2iz.mongodb.net/myDB?retryWrites=true&w=majority');\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const meetupIds = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    paths: meetupIds.map(meetupIdData => ({ params: { meetupId: meetupIdData._id.toString() }})),\r\n    fallback: false\r\n  };\r\n}\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect('mongodb+srv://amlan:amlan@cluster0.sguj2iz.mongodb.net/myDB?retryWrites=true&w=majority');\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const selectedMeetup = await meetupsCollection.findOne({_id: meetupId});\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        image: selectedMeetup.image,\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        description: selectedMeetup.description\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}